// <auto-generated />
using System;
using MatchingApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MatchingApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240812174843_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MatchingApp.Models.Entities.Match", b =>
                {
                    b.Property<string>("LikerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LikedId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsMutual")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LikedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("LikerId", "LikedId");

                    b.HasIndex("LikedId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("MatchingApp.Models.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MatchingApp.Models.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MatchingApp.Models.Entities.Match", b =>
                {
                    b.HasOne("MatchingApp.Models.Entities.User", "Liked")
                        .WithMany("Matched")
                        .HasForeignKey("LikedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatchingApp.Models.Entities.User", "Liker")
                        .WithMany("Matches")
                        .HasForeignKey("LikerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Liked");

                    b.Navigation("Liker");
                });

            modelBuilder.Entity("MatchingApp.Models.Entities.Message", b =>
                {
                    b.HasOne("MatchingApp.Models.Entities.User", "Receiver")
                        .WithMany("SentMessages")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatchingApp.Models.Entities.User", "Sender")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("MatchingApp.Models.Entities.User", b =>
                {
                    b.Navigation("Matched");

                    b.Navigation("Matches");

                    b.Navigation("ReceivedMessages");

                    b.Navigation("SentMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
